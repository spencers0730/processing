void setup() {
  fullScreen();
}
void draw() {
  noLoop();
  PImage x = createImage(17, 17, RGB);
  x.loadPixels();
  //int[][] c = {{0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b}, {0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b}, {0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b}, {0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b}, {0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b}, {0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b}, {0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b}, {0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b}, {0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b}, {0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b}, {0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b}, {0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b}, {0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b}, {0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b}, {0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b}, {0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b}, {0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b}}
  //;
  int[] c = { 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 
    0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 
    0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 
    0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 
    0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 
    0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 
    0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 
    0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 
    0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 
    0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 
    0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 
    0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 
    0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 
    0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 
    0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0x000000, 0x000000, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 
    0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 
    0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b, 0xffeb3b};

  for (int index = 0; index < x.pixels.length; index++) {
    //int i = index / 17;
    //int j = index % 17;
    //x.pixels[index] = c[i][j];
    //else
    if ((index / 17) % 2 == 0)
    x.pixels[index] = c[index];
    else 
      x.pixels[index] = c [index + 17 - (index % 17) - 1];
      
  }
  x.updatePixels();
  x.resize(1000, 1000);
  image(x, 0, 0);
}
